#[doc = "Register `EMMCCORE_CQCRDT` reader"]
pub type R = crate::R<EmmccoreCqcrdtSpec>;
#[doc = "Field `DCLR` reader - Direct Command Last Response This register contains the response of the command generated by the last direct-command (DCMD) task which was sent. CQE shall update this register when it receives the response for a DCMD task. This register is considered valid only after bit 31 of CQTDBR register is cleared by CQE."]
pub type DclrR = crate::FieldReader<u32>;
impl R {
    #[doc = "Bits 0:31 - Direct Command Last Response This register contains the response of the command generated by the last direct-command (DCMD) task which was sent. CQE shall update this register when it receives the response for a DCMD task. This register is considered valid only after bit 31 of CQTDBR register is cleared by CQE."]
    #[inline(always)]
    pub fn dclr(&self) -> DclrR {
        DclrR::new(self.bits)
    }
}
#[doc = "Command queueing command response for direct-command task register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`emmccore_cqcrdt::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."]
pub struct EmmccoreCqcrdtSpec;
impl crate::RegisterSpec for EmmccoreCqcrdtSpec {
    type Ux = u32;
}
#[doc = "`read()` method returns [`emmccore_cqcrdt::R`](R) reader structure"]
impl crate::Readable for EmmccoreCqcrdtSpec {}
#[doc = "`reset()` method sets EMMCCORE_CQCRDT to value 0"]
impl crate::Resettable for EmmccoreCqcrdtSpec {
    const RESET_VALUE: u32 = 0;
}
